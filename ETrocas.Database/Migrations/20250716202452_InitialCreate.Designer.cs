// <auto-generated />
using System;
using ETrocas.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETrocas.Database.Migrations
{
    [DbContext(typeof(ETrocasDbContext))]
    [Migration("20250716202452_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ETrocas.Domain.Entities.Produtos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Produto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("produtos", (string)null);
                });

            modelBuilder.Entity("ETrocas.Domain.Entities.Proposta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataProposta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataResposta")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProdutoDesejadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoOfertadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StatusProposta")
                        .HasColumnType("int");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioPropostaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoDesejadoId");

                    b.HasIndex("ProdutoOfertadoId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioPropostaId");

                    b.ToTable("proposta", (string)null);
                });

            modelBuilder.Entity("ETrocas.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("ETrocas.Domain.Entities.Produtos", b =>
                {
                    b.HasOne("ETrocas.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Produtos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ETrocas.Domain.Entities.Proposta", b =>
                {
                    b.HasOne("ETrocas.Domain.Entities.Produtos", "ProdutoDesejado")
                        .WithMany()
                        .HasForeignKey("ProdutoDesejadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ETrocas.Domain.Entities.Produtos", "ProdutoOfertado")
                        .WithMany()
                        .HasForeignKey("ProdutoOfertadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ETrocas.Domain.Entities.Usuario", null)
                        .WithMany("PropostasRecebidas")
                        .HasForeignKey("UsuarioId");

                    b.HasOne("ETrocas.Domain.Entities.Usuario", "UsuarioProposta")
                        .WithMany("PropostasFeitas")
                        .HasForeignKey("UsuarioPropostaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ProdutoDesejado");

                    b.Navigation("ProdutoOfertado");

                    b.Navigation("UsuarioProposta");
                });

            modelBuilder.Entity("ETrocas.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Produtos");

                    b.Navigation("PropostasFeitas");

                    b.Navigation("PropostasRecebidas");
                });
#pragma warning restore 612, 618
        }
    }
}
